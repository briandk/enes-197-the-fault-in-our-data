[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"sample book written Markdown. can use anything Pandoc’s Markdown supports; example, math equation \\(^2 + b^2 = c^2\\).","code":""},{"path":"index.html","id":"usage","chapter":"1 About","heading":"1.1 Usage","text":"bookdown chapter .Rmd file, .Rmd file can contain one (one) chapter. chapter must start first-level heading: # good chapter, can contain one (one) first-level heading.Use second-level higher headings within chapters like: ## short section ### even shorter section.index.Rmd file required, also first book chapter. homepage render book.","code":""},{"path":"index.html","id":"render-book","chapter":"1 About","heading":"1.2 Render book","text":"can render HTML version example book without changing anything:Find Build pane RStudio IDE, andFind Build pane RStudio IDE, andClick Build Book, select output format, select “formats” ’d like use multiple formats book source files.Click Build Book, select output format, select “formats” ’d like use multiple formats book source files.build book R console:render example PDF bookdown::pdf_book, ’ll need install XeLaTeX. recommended install TinyTeX (includes XeLaTeX): https://yihui.org/tinytex/.","code":"\nbookdown::render_book()"},{"path":"index.html","id":"preview-book","chapter":"1 About","heading":"1.3 Preview book","text":"work, may start local server live preview HTML book. preview update edit book save individual .Rmd files. can start server work session using RStudio add-“Preview book”, R console:","code":"\nbookdown::serve_book()"},{"path":"hello-plot-with-python.html","id":"hello-plot-with-python","chapter":"2 Hello Plot with Python","heading":"2 Hello Plot with Python","text":"’s lots stuff Python; let’s start plot!","code":""},{"path":"hello-plot-with-python.html","id":"plotting-the-diamonds-dataset","chapter":"2 Hello Plot with Python","heading":"2.1 Plotting the diamonds dataset","text":"first plot going make use diamonds dataset ships plotnine.’ll import necessary stuff plotnine first. seems like lot imports, made explicit can trace parts code come plotnine library.","code":"from plotnine import aes\n#> Matplotlib is building the font cache; this may take a moment.\nfrom plotnine import facet_wrap\nfrom plotnine import ggtitle\nfrom plotnine import ggplot\nfrom plotnine import geom_point\nfrom plotnine import geom_bar\nfrom plotnine import scale_color_brewer\nfrom plotnine import theme_minimal\nfrom plotnine import xlab\nfrom plotnine import ylab\nfrom plotnine.data import diamonds\nimport plotnine\n\nplotnine.options.figure_size = (9, 6.5)\n\n(\n  ggplot(\n    diamonds,\n    aes(\n      x = 'carat',\n      y = 'price',\n      color='clarity',\n      size = \"depth\"\n    )\n  )\n  + geom_point(alpha = 0.1)\n  + scale_color_brewer(type='qual', palette=3)\n  + facet_wrap('~color')\n  + theme_minimal()\n  + xlab(\"Carat\")\n  + ylab(\"Price ($USD)\")\n  + ggtitle('Diamond Prices by Carat')\n\n)\n#> <ggplot: (8777595648100)>\n#> \n#> /opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages/plotnine/utils.py:371: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead."},{"path":"hello-plot-with-python.html","id":"typesetting-math-with-latex-for-fun-and-profit","chapter":"2 Hello Plot with Python","heading":"2.2 Typesetting Math with \\(\\LaTeX\\) for fun and profit","text":"can use \\(\\LaTeX\\) show equations:\\[\n\\vec{F}_{net} = m\\vec{}\n\\]","code":""},{"path":"hello-plot-with-python.html","id":"we-can-also-run-r","chapter":"2 Hello Plot with Python","heading":"2.3 We can also run R","text":", ’ll generate similar version plot just made Python, ’ll make one R. ’ll need different packages make work.look code anad plot, ask spot major differences Python version.Can spot differences?","code":"\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(magrittr)\nlibrary(scales)\n\ndiamonds %>%\n  ggplot(aes(carat, price, color = clarity, size = depth)) +\n  geom_point(alpha = 0.1) +\n  scale_color_brewer(type = 'qual', palette = 3) +\n  facet_wrap(~ color) +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  labs(caption = \"Example: Comparing the size, price, and clarity of 50,000 diamonds\")"},{"path":"comparing-tokenization-in-pygments-and-pandoc.html","id":"comparing-tokenization-in-pygments-and-pandoc","chapter":"3 Comparing Tokenization in Pygments and Pandoc","heading":"3 Comparing Tokenization in Pygments and Pandoc","text":"’s example Python code:, best ability, Pygments tokenizes code vs. Pandoc . Note Pygments seems recognize apply token types pandoc (example, Pygments recognizes punctuation (p) code pandoc . Note also pandoc may assign token types added style. two behaviors mean:Unstyled code might still semantically tokenized, butUnstyled code might still semantically tokenized, butUntokenized code styledUntokenized code styled","code":"from plotnine import geom_text\ndef myFunction(x: str):\n    pass"},{"path":"comparing-tokenization-in-pygments-and-pandoc.html","id":"how-the-code-gets-tokenized","chapter":"3 Comparing Tokenization in Pygments and Pandoc","heading":"3.1 How the Code Gets Tokenized","text":"Comparing Python code gets tokenized Pygments vs. Pandoc","code":""},{"path":"comparing-tokenization-in-pygments-and-pandoc.html","id":"seeing-what-syntax-coloring-looks-like-with-a-default-snippet-from-pygments","chapter":"3 Comparing Tokenization in Pygments and Pandoc","heading":"3.2 Seeing what syntax-coloring looks like with a default snippet from Pygments","text":"","code":"from typing import Iterator\n\n# This is an example\nclass Math:\n    @staticmethod\n    def fib(n: int) -> Iterator[int]:\n        \"\"\" Fibonacci series up to n \"\"\"\n        a, b = 0, 1\n        while a < n:\n            yield a\n            a, b = b, a + b\n\nresult = sum(Math.fib(42))\nprint(\"The answer is {}\".format(result))\n#> The answer is 88"}]
